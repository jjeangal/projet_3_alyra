{"version":3,"sources":["contexts/EthContext/EthContext.js","contexts/EthContext/state.js","contexts/EthContext/EthProvider.jsx","contexts/EthContext/useEth.js","components/Intro/index.jsx","components/Header.jsx","components/OwnerSection/StatusChange.jsx","components/OwnerSection/AddVoter.jsx","components/OwnerSection/index.jsx","components/VoterSection/Proposals.jsx","components/VoterSection/Votes.jsx","components/VoterSection/index.jsx","components/VoterAddresses.jsx","components/ProposalsList.jsx","components/Status.jsx","App.jsx","index.js"],"names":["EthContext","createContext","actions","initialState","artifact","web3","accounts","networkID","contract","reducer","state","action","type","data","Error","EthProvider","children","useReducer","dispatch","init","useCallback","Web3","givenProvider","eth","requestAccounts","net","getId","abi","address","networks","Contract","err","console","error","useEffect","tryInit","require","events","handleChange","alert","forEach","e","window","ethereum","on","removeListener","Provider","value","useEth","useContext","Intro","Header","className","StatusChange","setWinner","handleShowWinner","status","setStatus","updateStatus","methods","workflowStatus","call","currentStatus","loadWinner","getPastEvents","fromBlock","toBlock","then","results","factorWinner","length","winningProposalID","winnerId","checkWinner","parseInt","startProp","startProposalsRegistering","send","from","endProp","endProposalsRegistering","startVoting","startVotingSession","endVoting","endVotingSession","tallyVotes","onClick","AddVoter","setAddresses","useState","inputValue","setInputValue","addVoter","transac","addresses","VoterRegistered","addVoterComponent","placeholder","onChange","test","target","OwnerSection","component","updateComponent","winner","showWinner","onlyOwner","load","owner","addrArray","winnerComponent","Proposals","number","updateNumber","setProposals","description","setDescription","voteCount","setVoteCount","proposalGetter","handleProposalGetter","id","setId","addProposal","eventData","ProposalRegistered","returnValues","_proposalId","proposals","getProposal","proposalId","document","getElementById","getOneProposal","proposal","showVoter","timeToAddProposal","Vote","voterAddress","updateVoterAddress","votedId","updateVotedId","voterGetter","handleVoterGetter","vote","setVote","getTransactionReceipt","transactionHash","getVoter","addr","votedProposalId","isRegistered","hasVoted","log","message","ShowVoter","props","timeToVote","VoterSection","onlyVoter","loadProposals","transaction","numberOfTransactions","isVoter","voter","_voterAddress","loadOnlyVoters","VoterAddresses","logs","map","proposalsList","proposalsTable","_desc","Status","getStatus","App","title","ProposalsList","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.69752add.chunk.js","sourcesContent":["import { createContext } from \"react\";\n\nconst EthContext = createContext();\n\nexport default EthContext;\n","const actions = {\n  init: \"INIT\",\n};\n\nconst initialState = {\n  artifact: null,\n  web3: null,\n  accounts: null,\n  networkID: null,\n  contract: null\n};\n\nconst reducer = (state, action) => {\n  const { type, data } = action;\n  switch (type) {\n    case actions.init:\n      return { ...state, ...data };\n    default:\n      throw new Error(\"Undefined reducer action type\");\n  }\n};\n\nexport {\n  actions,\n  initialState,\n  reducer\n};\n","import React, { useReducer, useCallback, useEffect } from \"react\";\nimport Web3 from \"web3\";\nimport EthContext from \"./EthContext\";\nimport { reducer, actions, initialState } from \"./state\";\n\nfunction EthProvider({ children }) {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  const init = useCallback(\n    async artifact => {\n      if (artifact) {\n        const web3 = new Web3(Web3.givenProvider || \"ws://localhost:8545\");\n        const accounts = await web3.eth.requestAccounts();\n        const networkID = await web3.eth.net.getId();\n        const { abi } = artifact;\n        let address, contract;\n        try {\n          address = artifact.networks[networkID].address;\n          contract = new web3.eth.Contract(abi, address);\n        } catch (err) {\n          console.error(err);\n        }\n        dispatch({\n          type: actions.init,\n          data: { artifact, web3, accounts, networkID, contract }\n        });\n      }\n    }, []);\n\n  useEffect(() => {\n    const tryInit = async () => {\n      try {\n        const artifact = require(\"../../contracts/Voting.json\");\n        init(artifact);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    tryInit();\n  }, [init]);\n\n  useEffect(() => {\n    const events = [\"chainChanged\", \"accountsChanged\"];\n    const handleChange = () => {\n      init(state.artifact);\n      alert(\"Connecting with new address.\");\n    };\n\n    events.forEach(e => window.ethereum.on(e, handleChange));\n    return () => {\n      events.forEach(e => window.ethereum.removeListener(e, handleChange));\n    };\n  }, [init, state.artifact]);\n\n  return (\n    <EthContext.Provider value={{\n      state,\n      dispatch\n    }}>\n      {children}\n    </EthContext.Provider>\n  );\n}\n\nexport default EthProvider;\n","import { useContext } from \"react\";\nimport EthContext from \"./EthContext\";\n\nconst useEth = () => useContext(EthContext);\n\nexport default useEth;\n","import \"../../styling/Intro.css\";\n\nfunction Intro() {\n  return (\n    <>\n      <div>\n        <h1>👋 Welcome to this Voting Session!</h1>\n      </div>\n    </>\n  );\n}\n\nexport default Intro;\n","import useEth from \"../contexts/EthContext/useEth\";\n\nfunction Header() {\n    const { state: { accounts } } = useEth();\n\n    return(\n        <div className='header'>Your active address is: {accounts} </div>\n    )\n}\n\nexport default Header;","import { useEffect, useCallback } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"../../styling/Buttons.css\";\n\nfunction StatusChange({ setWinner, handleShowWinner, status, setStatus }) {\n    const { state: { accounts, contract } } = useEth();\n\n    const updateStatus = useCallback(async() => {\n        const currentStatus = await contract.methods.workflowStatus().call();\n        setStatus(currentStatus);\n    }, [contract, setStatus]);\n\n    const loadWinner = useCallback(async() => {\n        contract.getPastEvents('ProposalRegistered', {fromBlock: 0, toBlock: 'latest'}).then(\n            results => factorWinner(results));\n        \n        const factorWinner = async(results) => {\n            if(results.length > 0) {\n                const winnerId = await contract.methods.winningProposalID().call();\n                setWinner(winnerId);\n                handleShowWinner(true);\n            }\n        }\n    }, [contract, setWinner, handleShowWinner]);\n\n    useEffect(() => {\n        const checkWinner = async() => {\n            if(parseInt(status) === 5) {\n                loadWinner();\n            }\n        }\n        checkWinner();\n    }, [contract, status, loadWinner]);\n    \n    const startProp = async() => {\n        await contract.methods.startProposalsRegistering().send({ from: accounts[0] });\n        updateStatus();\n    }\n\n    const endProp = async() => {\n        await contract.methods.endProposalsRegistering().send({ from: accounts[0] });\n        updateStatus();\n    }\n\n    const startVoting = async() => {\n        await contract.methods.startVotingSession().send({ from: accounts[0] });\n        updateStatus();\n    }\n\n    const endVoting = async() => {\n        await contract.methods.endVotingSession().send({ from: accounts[0] });\n        updateStatus();\n    }\n\n    const tallyVotes = async() => {\n        await contract.methods.tallyVotes().send({ from: accounts[0] });\n        updateStatus();\n        loadWinner();\n    }\n\n    return(\n        <div className=\"statusButtons\">\n            {parseInt(status) === 0 ? <button className=\"buttonS\" onClick={startProp}>Start proposal phase</button> : null}\n            {parseInt(status) === 1 ? <button className=\"buttonS\" onClick={endProp}>End proposal phase</button> : null}\n            {parseInt(status) === 2 ? <button className=\"buttonS\" onClick={startVoting}>Start voting phase</button> : null}\n            {parseInt(status) === 3 ? <button className=\"buttonS\" onClick={endVoting}>End voting phase</button> : null}\n            {parseInt(status) === 4 ? <button className=\"buttonS\" onClick={tallyVotes}>Tally Votes</button> : null}\n            {parseInt(status) === 5 ? <p>Voting session  is over.</p> : null}\n        </div>\n    )\n}\n\nexport default StatusChange;","import useEth from \"../../contexts/EthContext/useEth\";\nimport { useState } from \"react\";\nimport \"../../styling/Buttons.css\";\n\nfunction AddVoter({ status, setAddresses }) {\n    const { state: { contract, accounts } } = useEth();\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const addVoter = async() => {\n        try {\n            const transac = await contract.methods.addVoter(inputValue).send({ from: accounts[0] });\n            setAddresses(addresses => [...addresses, transac.events.VoterRegistered]);\n            setInputValue(\"\");\n        } catch (error) {\n            if (inputValue === \"\") {\n                alert(\"choose a valid address\");\n            }\n        }\n    }\n\n    const handleInputChange = e => {\n        if (/0[xX][0-9a-fA-F]+/.test(e.target.value)) {\n          setInputValue(e.target.value);\n        }\n    };\n\n    const addVoterComponent =\n        <div>\n            Add following adress: <input\n                className=\"inputs\"\n                type=\"text\"\n                placeholder=\"address\"\n                value={inputValue}\n                onChange={handleInputChange}\n            />\n            <button className=\"buttonS\" onClick={addVoter}>Add</button>\n        </div>\n\n    return (parseInt(status) === 0 ? addVoterComponent : null);\n}\n\nexport default AddVoter;","import { useState, useEffect } from \"react\";\nimport StatusChange from \"./StatusChange\";\nimport AddVoter from \"./AddVoter\";\nimport { useEth } from \"../../contexts/EthContext\";\nimport \"../../styling/Indexes.css\";\n\nfunction OwnerSection({ setAddresses, status, setStatus }) {\n  const { state: { contract, accounts } } = useEth();\n  const [component, updateComponent] = useState();\n  const [winner, setWinner] = useState();\n  const [showWinner, handleShowWinner] = useState(false);\n\n  useEffect(() => {\n    const onlyOwner = \n    <>\n      <h2 className=\"title\">Administrator section</h2>\n      <br/>\n      <StatusChange \n        status={status} \n        setStatus={setStatus} \n        setWinner={setWinner} \n        handleShowWinner={handleShowWinner}/>\n      <AddVoter status={status} setAddresses={setAddresses}/>\n      <hr />\n    </>\n\n    const load = async() => {\n      if(contract) {\n        const owner = await contract.methods.owner().call();\n        const addrArray = await contract.getPastEvents('VoterRegistered', {fromBlock: 0});\n        const currentStatus = await contract.methods.workflowStatus().call();\n        setStatus(currentStatus);\n        setAddresses(addrArray);\n        owner === accounts[0] ? updateComponent(onlyOwner) : updateComponent(<></>);\n      }\n    }\n    load();\n    \n  }, [contract, accounts, status, setStatus, setAddresses]);\n\n  const winnerComponent =\n    <>\n      <p>The winner of this voting session is proposal {winner}</p>\n    </>\n\n  return (\n    <>\n      {showWinner === true ? winnerComponent : null}\n      <div>\n        {component}\n      </div>\n    </>\n  );\n}\n\nexport default OwnerSection;","import { useState } from \"react\";\nimport \"../../styling/Buttons.css\";\n\nfunction Proposals( { status, number, updateNumber, setProposals, contract, accounts } ) {\n  const [description, setDescription] = useState(\"\");\n  const [voteCount, setVoteCount] = useState(0);\n  const [proposalGetter, handleProposalGetter] = useState(false);\n  const [id, setId] = useState(\"\");\n\n  const addProposal = async() => {\n    if(description !== \"\") {\n      const transac = await contract.methods.addProposal(description).send({ from: accounts[0] });\n      const eventData = transac.events.ProposalRegistered.returnValues._proposalId + 1;\n      setProposals(proposals => [...proposals, transac.events.ProposalRegistered]);\n      updateNumber(parseInt(eventData));\n    } else {\n      alert('Proposal description cannot be empty');\n    }\n  } \n\n  const getProposal = async() => {\n    const proposalId = document.getElementById(\"id\").value;\n    if (/^(0|[1-9][0-9]*)$/.test(proposalId)) {\n      if(proposalId < number) {\n        const proposal = await contract.methods.getOneProposal(proposalId).call({ from: accounts[0] });\n        setVoteCount(proposal.voteCount);\n        setId(proposalId);\n        handleProposalGetter(true);\n      } else {\n        alert(\"Proposal associated to this id does not exist\");\n      }\n    } else {\n      alert('Proposal must be a positive number');\n    }\n  }\n\n  const handleAddProposal = e => {\n    setDescription(e.target.value);\n  };\n\n  const showVoter = \n    <>\n      <br/>\n      <p>Proposal <strong>{id}</strong> got <strong>{voteCount}</strong> votes</p>\n    </>\n\n  const timeToAddProposal =\n    <>\n      <p>Add a new proposal:</p>\n      <input className=\"inputs\" placeholder=\"description\" onChange={handleAddProposal}></input>\n      <button className=\"buttonS\" onClick={addProposal}>Add</button>\n      <br />\n    </>\n\n  return(\n    <div className=\"voteInputs\">\n      {parseInt(status) === 1? timeToAddProposal: null}\n      <p>Search for a proposal:</p>\n      <input className=\"inputs\" id=\"id\" placeholder=\"proposal id\"></input>\n      <button className=\"buttonS\" onClick={getProposal}>Get</button>\n      {proposalGetter === true ? showVoter: null}\n    </div>\n  )\n}\n\nexport default Proposals;","import { useState } from \"react\";\nimport useEth from \"../../contexts/EthContext/useEth\";\nimport \"../../styling/Buttons.css\";\n\nfunction Vote( {status, number} ) {\n    const { state: { web3, contract, accounts } } = useEth();\n    const [voterAddress, updateVoterAddress] = useState(\"\");\n    const [votedId, updateVotedId] = useState();\n    const [voterGetter, handleVoterGetter] = useState(false);\n\n    const vote = async() => {\n        const proposal = document.getElementById(\"proposal\").value;\n        if (/^(0|[1-9][0-9]*)$/.test(proposal)) {\n            if(proposal < number) {\n                const transac = await contract.methods.setVote(proposal).send({ from: accounts[0] });\n                const receipt = await web3.eth.getTransactionReceipt(transac.transactionHash);\n                if (receipt.status) {\n                    alert(\"Successfully vote for proposal: \" + proposal + \"!\");\n                }\n            } else {\n                alert(\"Proposal associated to this id does not exist\");\n            }\n        } else {\n            alert(\"Proposal Id must be a positive interger\");\n        }\n    }\n        \n    const getVoter = async() => {\n        const addr = document.getElementById(\"address\").value;\n        try {\n            if (/0[xX][0-9a-fA-F]+/.test(addr)) {\n                const transac = await contract.methods.getVoter(addr).call({ from: accounts[0] });\n                updateVotedId(transac.votedProposalId);\n                updateVoterAddress(addr);\n                let state = 3;\n                if(transac.isRegistered) {\n                    state = 2;\n                    if(transac.hasVoted) {\n                        state = 1;\n                    }\n                } \n                handleVoterGetter(state);\n            } else {\n                alert(\"Invalid address\");\n            }\n        } catch (error) {\n            console.log(error.message);\n            alert(\"Invalid address\");\n        }\n    }\n\n    function ShowVoter(props) {\n        const state = props.state;\n        if(state === 1) {\n            return <><br/><p>Voter <strong>{voterAddress}</strong> voted for proposal {votedId} </p></>;\n        } if (state === 2) {\n          return <><br/><p>Voter <strong>{voterAddress}</strong> has not yet voted.</p></>;\n        } if(state === 3) {\n            return  <><br/><p> <strong>{voterAddress}</strong> is not a voter.</p></>;\n        } else {\n            return null;\n        }\n    }\n\n    const timeToVote = \n        <>\n            <p>Vote for a proposal:</p>\n            <input className=\"inputs\" id=\"proposal\" placeholder=\"proposal id\"></input>\n            <button className=\"buttonS\" onClick={vote}>Vote</button>\n            <br/>\n        </>\n\n    return(\n        <div className=\"voteInputs\">\n            {parseInt(status) === 3? timeToVote: null}\n            <p>Search for a voter:</p>\n            <input className=\"inputs\" id=\"address\" placeholder=\"address\"></input>\n            <button className=\"buttonS\" onClick={getVoter}>Get</button>\n            <ShowVoter state={voterGetter}></ShowVoter>\n        </div>\n    )\n}\n\nexport default Vote;","import useEth from \"../../contexts/EthContext/useEth\";\nimport Proposals from \"./Proposals\";\nimport Vote from \"./Votes\";\nimport { useState, useEffect } from \"react\";\nimport \"../../styling/Indexes.css\";\n\nfunction VoterSection( {  status, number, updateNumber, setProposals, addresses }) {\n  const { state: { contract, accounts } } = useEth();\n  const [component, updateComponent] = useState();\n\n  useEffect(() => {\n    const onlyVoter = \n      <div className=\"voter\">\n        <h2 className=\"title\">Voters Section</h2>\n        <Proposals \n          status={status}\n          setProposals={setProposals}\n          number={number}\n          updateNumber={updateNumber}\n          contract={contract}\n          accounts={accounts}/>\n        <Vote status={status} number={number}/>\n      </div>; \n\n    const loadProposals = async() => {\n      try {\n        const transaction = await contract.getPastEvents('ProposalRegistered', {fromBlock: 0});\n        const numberOfTransactions = transaction.length;\n        updateNumber(numberOfTransactions);\n        setProposals(transaction);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    function loadOnlyVoters() {\n      let isVoter = false;\n      addresses.forEach(voter => {\n        if(voter.returnValues._voterAddress === accounts[0]) isVoter = true;\n      });\n      isVoter === true ? updateComponent(onlyVoter) : updateComponent(<></>);\n    }\n\n    if(contract) {\n      loadProposals();\n      loadOnlyVoters();\n    }\n  }, [contract, status, setProposals, accounts, addresses, number, updateNumber]);\n\n  return (component);\n}  \n export default VoterSection;\n  ","import \"../styling/Logs.css\";\n\nfunction VoterAddresses({addresses}) {\n  const logs = \n    <div>\n      <hr/>\n      <table>\n        <tbody>\n          <tr><th>Voters Addresses</th></tr>\n          {addresses.map((address) => \n            (<tr key={address.id}><td>{address.returnValues._voterAddress}</td></tr>))}\n        </tbody>\n      </table>\n    </div>\n  \n  return (\n    <div>\n      {logs}\n      <br/>\n    </div>\n  );\n}\n  \nexport default VoterAddresses;","function proposalsList( { proposals }) {\n    const proposalsTable = \n      <div>\n        <h4>List of current proposals</h4>\n        <table>\n          <tbody>\n            <tr><th>Id</th><th>Description</th></tr>\n            {proposals.map((proposal) => \n              (<tr key={proposal.id}><td>{proposal.returnValues._proposalId}</td><td>{proposal.returnValues._desc}</td></tr>))}\n          </tbody>\n        </table>\n        <br/>\n      </div> \n\n    return (\n      <div>\n        {proposalsTable}\n      </div>\n    );\n}\n\nexport default proposalsList;","function Status({status}) {\n  const getStatus = (status) => {\n    switch(status){\n      case \"0\":\n        return \"Registering Voters\"\n      case \"1\": \n        return \"Proposals registration has started\"\n      case \"2\":\n        return \"Proposals registration has ended\"\n      case \"3\":\n        return \"Voting session has started\"\n      case \"4\":\n        return \"Voting session has ended\"\n      case \"5\":\n        return \"Votes Tallied\"\n      default:\n        return \"Registering Voters\"\n    }\n  }\n  \n  return(\n    <div>\n      <p>Status of this session: <strong>{getStatus(status)}</strong></p>\n    </div>\n  )\n}\n\nexport default Status;","import { EthProvider } from \"./contexts/EthContext\";\nimport Intro from \"./components/Intro/\";\nimport Header from \"./components/Header\";\nimport OwnerSection from \"./components/OwnerSection\";\nimport VoterSection from \"./components/VoterSection\";\nimport VoterAddresses from \"./components/VoterAddresses\";\nimport ProposalsList from \"./components/ProposalsList\";\nimport Status from \"./components/Status\";\nimport { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nfunction App() {\n  const [addresses, setAddresses] = useState([]);\n  const [status, setStatus] = useState(0);\n  const [proposals, setProposals] = useState([]);\n  const [number, updateNumber] = useState();\n\n  useEffect(() => {\n    document.title = \"BC Voting\";\n  }, [])\n\n  return (\n    <EthProvider>\n      <div id=\"App\" >\n        <div className=\"container\">\n          <Header />\n          <hr />\n          <Intro />\n          <hr/>\n          <Status status={status}/>\n          <OwnerSection status={status} setAddresses={setAddresses} setStatus={setStatus}/>\n          {number !== 0 ? <ProposalsList proposals={proposals}/> : null}\n          <VoterSection \n            status={status}\n            number={number} \n            updateNumber={updateNumber} \n            proposals={proposals} \n            setProposals={setProposals} \n            addresses={addresses}/>\n          {addresses.length > 0 ? <VoterAddresses addresses={addresses}/> : null}\n        </div>\n      </div>\n    </EthProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}